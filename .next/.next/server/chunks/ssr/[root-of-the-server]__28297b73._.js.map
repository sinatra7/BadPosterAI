{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/detect-posture-issues.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI flow for detecting posture issues from an image.\n *\n * - detectPostureIssues - A function that handles the posture detection process.\n * - DetectPostureIssuesInput - The input type for the detectPostureIssues function.\n * - DetectPostureIssuesOutput - The return type for the detectPostureIssues function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst DetectPostureIssuesInputSchema = z.object({\n  imageDataUri: z\n    .string()\n    .describe(\n      \"A photo of a person's posture, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type DetectPostureIssuesInput = z.infer<typeof DetectPostureIssuesInputSchema>;\n\nconst DetectPostureIssuesOutputSchema = z.object({\n  issues: z\n    .array(z.string())\n    .describe(\n      'A list of detected posture issues. If no issues are found, return an empty array.'\n    ),\n});\nexport type DetectPostureIssuesOutput = z.infer<typeof DetectPostureIssuesOutputSchema>;\n\nexport async function detectPostureIssues(\n  input: DetectPostureIssuesInput\n): Promise<DetectPostureIssuesOutput> {\n  return detectPostureIssuesFlow(input);\n}\n\nconst possibleIssues = [\n  'Knee Over Toe',\n  'Hunched Back',\n  'Slouching',\n  'Forward Neck Tilt',\n  'Uneven Shoulders',\n  'Swayback',\n  'Pelvic Tilt',\n  'Rounded Shoulders',\n];\n\nconst prompt = ai.definePrompt({\n  name: 'detectPostureIssuesPrompt',\n  input: {schema: DetectPostureIssuesInputSchema},\n  output: {schema: DetectPostureIssuesOutputSchema},\n  prompt: `You are a world-class physical therapist and posture expert. Your task is to analyze the provided image of a person and identify any posture problems.\n\nAnalyze the image carefully: {{media url=imageDataUri}}\n\nIdentify any issues from the following list. Only return issues from this list. If the posture is good, return an empty array for the issues.\n\nPotential Issues:\n${possibleIssues.map(issue => `- ${issue}`).join('\\n')}\n\nRespond with the list of identified issues.`,\n});\n\nconst detectPostureIssuesFlow = ai.defineFlow(\n  {\n    name: 'detectPostureIssuesFlow',\n    inputSchema: DetectPostureIssuesInputSchema,\n    outputSchema: DetectPostureIssuesOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output || { issues: [] };\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,QAAQ,uIAAA,CAAA,IAAC,CACN,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CACP;AAEN;AAGO,eAAe,oBACpB,KAA+B;IAE/B,OAAO,wBAAwB;AACjC;AAEA,MAAM,iBAAiB;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA8B;IAC9C,QAAQ;QAAC,QAAQ;IAA+B;IAChD,QAAQ,CAAC;;;;;;;AAOX,EAAE,eAAe,GAAG,CAAC,CAAA,QAAS,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,MAAM;;2CAEZ,CAAC;AAC5C;AAEA,MAAM,0BAA0B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC3C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO,UAAU;QAAE,QAAQ,EAAE;IAAC;AAChC;;;IA1CoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/posture-recommendations.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A posture recommendation AI agent.\n *\n * - postureRecommendations - A function that handles the posture recommendation process.\n * - PostureRecommendationsInput - The input type for the postureRecommendations function.\n * - PostureRecommendationsOutput - The return type for the postureRecommendations function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst PostureRecommendationsInputSchema = z.object({\n  postureIssues: z\n    .string()\n    .describe('The posture issues detected, e.g., \"Slouching\", \"Knee over toe\", \"Hunched back\".'),\n});\nexport type PostureRecommendationsInput = z.infer<typeof PostureRecommendationsInputSchema>;\n\nconst PostureRecommendationsOutputSchema = z.object({\n  recommendations: z.string().describe('Personalized recommendations on how to improve posture.'),\n});\nexport type PostureRecommendationsOutput = z.infer<typeof PostureRecommendationsOutputSchema>;\n\nexport async function postureRecommendations(input: PostureRecommendationsInput): Promise<PostureRecommendationsOutput> {\n  return postureRecommendationsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'postureRecommendationsPrompt',\n  input: {schema: PostureRecommendationsInputSchema},\n  output: {schema: PostureRecommendationsOutputSchema},\n  prompt: `You are a personal AI posture coach. You will receive information about posture issues and give personalized recommendations on how to correct posture.\n\nPosture issues: {{{postureIssues}}}\n\nGive a single, concise, and simple tip to improve posture. Keep it under 20 words.`,\n});\n\nconst postureRecommendationsFlow = ai.defineFlow(\n  {\n    name: 'postureRecommendationsFlow',\n    inputSchema: PostureRecommendationsInputSchema,\n    outputSchema: PostureRecommendationsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,eAAe,uIAAA,CAAA,IAAC,CACb,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACvC;AAGO,eAAe,uBAAuB,KAAkC;IAC7E,OAAO,2BAA2B;AACpC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiC;IACjD,QAAQ;QAAC,QAAQ;IAAkC;IACnD,QAAQ,CAAC;;;;kFAIuE,CAAC;AACnF;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAxBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 367, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {detectPostureIssues as '4066acf2086b24b61c8c4907b3ba531e0ac5efdea8'} from 'ACTIONS_MODULE0'\nexport {postureRecommendations as '4088e334ba6c60605bc5b972a43f184527593cf73d'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/header.tsx"],"sourcesContent":["import { Bone } from 'lucide-react';\n\nexport function Header() {\n  return (\n    <header className=\"border-b border-border/50 bg-background/50 backdrop-blur-lg sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 flex h-16 items-center\">\n        <div className=\"flex items-center gap-2\">\n          <Bone className=\"w-8 h-8 text-primary\" />\n          <h1 className=\"text-2xl font-bold font-headline text-primary\">Posture Vision</h1>\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACd,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,kMAAA,CAAA,OAAI;wBAAC,WAAU;;;;;;kCAChB,8OAAC;wBAAG,WAAU;kCAAgD;;;;;;;;;;;;;;;;;;;;;;AAKxE","debugId":null}},
    {"offset": {"line": 478, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/posture-vision-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PostureVisionClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call PostureVisionClient() from the server but PostureVisionClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/posture-vision-client.tsx <module evaluation>\",\n    \"PostureVisionClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,0EACA","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/posture-vision-client.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PostureVisionClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call PostureVisionClient() from the server but PostureVisionClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/posture-vision-client.tsx\",\n    \"PostureVisionClient\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,sDACA","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { Header } from '@/components/header';\nimport { PostureVisionClient } from '@/components/posture-vision-client';\n\nexport default function Home() {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background text-foreground\">\n      <Header />\n      <main className=\"flex-1\">\n        <PostureVisionClient />\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,SAAM;;;;;0BACP,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,iJAAA,CAAA,sBAAmB;;;;;;;;;;;;;;;;AAI5B","debugId":null}}]
}